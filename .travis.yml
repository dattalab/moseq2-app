#specs for travis ci
language: python
python: '3.7'
dist: xenial

stages:
  - pip-install
  - conda-script
  - name: latest-pythons
    if: branch = release

jobs:
  include:
    - env: ISOLATED=true
      os: linux
      python: '3.7'
      stage: pip-install
      before_install:
        - pip install -U pip
        - pip install numpy==1.18.3
        - pip install pytest==5.4.1 codecov pytest-cov
        - export PYTHONPATH=$PYTHONPATH:$(pwd)
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:mc3man/xerus-media; fi
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install -y ffmpeg --allow-unauthenticated; fi
        - echo -e "machine github.com\n  login $CI_USERNAME\n  password $CI_USER_PASSWORD" > ~/.netrc
      install:
        - pip install --upgrade importlib_metadata
        - pip install .
      before_script:
        - ./scripts/download_test_dataset.sh
      script:
        - pytest --cov-report xml --cov-report term
      after_success:
        - codecov -t $CC_TEST_REPORTER_ID

    - env: ISOLATED=true
      os: linux
      python: '3.7'
      stage: conda-script
      before_install:
        - sudo add-apt-repository -y ppa:mc3man/xerus-media
        - sudo apt-get install -y software-properties-common
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update
        - sudo apt -y install g++-7
        - export CC="$(which gcc-7)"
        - export CXX="$(which g++-7)"
        - echo -e "machine github.com\n  login $CI_USERNAME\n  password $CI_USER_PASSWORD" > ~/.netrc
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - source "$HOME/miniconda/etc/profile.d/conda.sh"
        - hash -r
        - conda config --set always_yes yes --set changeps1 no
        - conda config --set channel_priority strict
        - conda env create -n moseq2-app --file scripts/moseq2-env.yaml
        - conda activate moseq2-app
        - pip install pytest codecov
        - pip install pytest-cov
      install:
        - ./scripts/install_moseq2_app.sh
      before_script:
        - ./scripts/download_test_dataset.sh
      script:
        - pytest

    - env: ISOLATED=true
      os: linux
      dist: focal
      python: '3.7'
      stage: conda-script
      before_install:
        - sudo apt update
        - sudo apt install build-essential
        - sudo apt -y install g++-7
        - export CC="$(which gcc-7)"
        - export CXX="$(which g++-7)"
        - echo -e "machine github.com\n  login $CI_USERNAME\n  password $CI_USER_PASSWORD" > ~/.netrc
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - source "$HOME/miniconda/etc/profile.d/conda.sh"
        - hash -r
        - conda config --set always_yes yes --set changeps1 no
        - conda env create -n moseq2-app --file scripts/moseq2-env.yaml
        - conda activate moseq2-app
        - pip install pytest codecov
        - pip install pytest-cov
      install:
        - ./scripts/install_moseq2_app.sh
      before_script:
        - ./scripts/download_test_dataset.sh
      script:
        - pytest

    - env: ISOLATED=true
      os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
            - gcc@7
      language: shell
      stage: latest-pythons
      before_install:
        - brew install gcc@7
        - export CC="$(which gcc-7)"
        - export CXX="$(which g++-7)"
        - echo -e "machine github.com\n  login $CI_USERNAME\n  password $CI_USER_PASSWORD" > ~/.netrc
        - curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o "miniconda3_latest.sh"
        - chmod +x miniconda3_latest.sh  # turn script into executable
        - hash -r
        - ./miniconda3_latest.sh -b -f -p $HOME/miniconda
        - source "$HOME/miniconda/etc/profile.d/conda.sh"
        - conda config --set always_yes yes --set changeps1 no
        - conda env create -n moseq2-app --file scripts/moseq2-env.yaml
        - conda activate moseq2-app
        - pip install pytest==5.4.1 codecov pytest-cov
      install:
        - ./scripts/install_moseq2_app.sh
      before_script:
        - ./scripts/download_test_dataset.sh
      script:
        - pytest

    - env: ISOLATED=true
      dist: xenial
      python: '3.7'
      stage: latest-pythons
      before_install:
        - pip install -U pip
        - pip install pytest==5.4.1 codecov pytest-cov
        - export PYTHONPATH=$PYTHONPATH:$(pwd)
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:mc3man/xerus-media; fi
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi
        - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install -y ffmpeg --allow-unauthenticated; fi
        - echo -e "machine github.com\n  login $CI_USERNAME\n  password $CI_USER_PASSWORD" > ~/.netrc
      install:
        - pip install --upgrade importlib_metadata
        - pip install .
      before_script:
        - ./scripts/download_test_dataset.sh
      script:
        - pytest --cov-report xml --cov-report term
      after_success:
        - codecov -t $CC_TEST_REPORTER_ID